Type "help", "copyright", "credits" or "license" for more information.
>>> import unittest
>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(2,4)
6
>>> add_integer(2,4.5)
6
>>> add_integer(2,"school")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "C:\Users\Franklin Chinedu\Desktop\ALX\alx-higher_level_programming\0x07-python-test_driven_development\0-add_integer.py", line 15, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer
>>> add_integer("3",4)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "C:\Users\Franklin Chinedu\Desktop\ALX\alx-higher_level_programming\0x07-python-test_driven_development\0-add_integer.py", line 13, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>> add_integer()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> add_integer("a", "b")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "C:\Users\Franklin Chinedu\Desktop\ALX\alx-higher_level_programming\0x07-python-test_driven_development\0-add_integer.py", line 13, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>>